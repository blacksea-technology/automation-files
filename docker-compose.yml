version: '3.8'

services: # Services définis dans le fichier Docker Compose

  serial-app:
    image: serial:v1.0.0
    container_name: serial-app
    restart: unless-stopped 
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://serialdb:5432/serialdb 
      - SPRING_DATASOURCE_USERNAME=admin 
      - SPRING_DATASOURCE_PASSWORD=admin123
    depends_on: 
      - serialdb 
    networks: 
      - blackseatechnology-network 

  
  serialdb:
    image: postgres:16.2-alpine 
    container_name: serialdb 
    restart: unless-stopped 
    environment:
      POSTGRES_DB: serialdb 
      POSTGRES_USER: admin 
      POSTGRES_PASSWORD: admin123
    networks:
      - blackseatechnology-network
    volumes:
      - serialdb-data:/var/lib/postgresql/data

  
  reference-app:
    image: reference:v1.0.0
    container_name: reference-app
    restart: unless-stopped 
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://referencedb:5432/referencedb 
      - SPRING_DATASOURCE_USERNAME=admin 
      - SPRING_DATASOURCE_PASSWORD=admin123
    depends_on: 
      - referencedb 
    networks: 
      - blackseatechnology-network 

  referencedb:
    image: postgres:16.2-alpine 
    container_name: referencedb 
    restart: unless-stopped 
    environment:
      POSTGRES_DB: referencedb 
      POSTGRES_USER: admin 
      POSTGRES_PASSWORD: admin123
    networks:
      - blackseatechnology-network 
    volumes:
      - referencedb-data:/var/lib/postgresql/data

  manifest-app:
    image: manifest:v1.0.0
    container_name: manifest-app
    restart: unless-stopped 
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://manifestdb:5432/manifestdb 
      - SPRING_DATASOURCE_USERNAME=admin 
      - SPRING_DATASOURCE_PASSWORD=admin123
    depends_on: 
      - manifestdb 
    networks: 
      - blackseatechnology-network 

  
  manifestdb:
    image: postgres:16.2-alpine 
    container_name: manifestdb 
    restart: unless-stopped 
    environment:
      POSTGRES_DB: manifestdb 
      POSTGRES_USER: admin 
      POSTGRES_PASSWORD: admin123
    networks:
      - blackseatechnology-network 
    volumes:
      - manifestdb-data:/var/lib/postgresql/data

  consolidation-app:
    image: consolidation:v1.0.0
    container_name: consolidation-app
    restart: unless-stopped 
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://consolidationdb:5432/consolidationdb 
      - SPRING_DATASOURCE_USERNAME=admin 
      - SPRING_DATASOURCE_PASSWORD=admin123
    depends_on: 
      - consolidationdb 
    networks: 
      - blackseatechnology-network 

  
  consolidationdb:
    image: postgres:16.2-alpine 
    container_name: consolidationdb 
    restart: unless-stopped 
    environment:
      POSTGRES_DB: consolidationdb 
      POSTGRES_USER: admin 
      POSTGRES_PASSWORD: admin123
    networks:
      - blackseatechnology-network 
    volumes:
      - consolidationdb-data:/var/lib/postgresql/data

  smartkey-app: # Déclaration du service smartkey-app
    image: smartkey:v1.0.0 # Image utilisée pour le service smartkey-app
    container_name: smartkey-app # Nom du conteneur smartkey-app
    restart: unless-stopped 
    # ports: # Mapping des ports
    #   - '8550:8550' # Mappage du port 8550 de l'hôte au port 8550 du conteneur
    environment: # Variables d'environnement du conteneur
      - SPRING_PROFILES_ACTIVE=dev # Activation du profil Spring pour le mode développement
      - SPRING_DATASOURCE_URL=jdbc:postgresql://smartKeydb:5432/smartKeydb # URL de la source de données Spring pour la base de données PostgreSQL
      - SPRING_DATASOURCE_USERNAME=admin # Nom d'utilisateur de la source de données Spring
      - SPRING_DATASOURCE_PASSWORD=admin123 # Mot de passe de la source de données Spring
    depends_on: # Dépendance du service
      - smartKeydb # Ce service dépend du service SmartKeydb
    networks: # Réseaux auxquels le service est connecté
      - blackseatechnology-network # Connecté au réseau blackseatechnology-network

  # Configuration du service SmartKeydb
  smartKeydb: # Déclaration du service SmartKeydb
    image: postgres:16.2-alpine  # Utilisation de l'image postgres
    container_name: smartKeydb # Nom du conteneur SmartKeydb
    restart: unless-stopped # Toujours redémarrer le conteneur en cas d'échec
    environment: # Configuration des variables d'environnement
      POSTGRES_DB: smartKeydb # Nom de la base de données PostgreSQL
      POSTGRES_USER: admin # Nom de l'utilisateur PostgreSQL
      POSTGRES_PASSWORD: admin123 # Mot de passe de l'utilisateur PostgreSQL
    # ports: # Mappage des ports
    #   - "5432:5432" # Mappage du port 5432 de l'hôte au port 5432 du conteneur
    networks: # Connexion aux réseaux
      - blackseatechnology-network # Connexion au réseau blackseatechnology-network
    volumes:
      - smartkeydb-data-new:/var/lib/postgresql/data

  # Configuration du service Gateway
  gateway-app: # Définition du nom du service application dans le docker-compose
    image: gateway:v1.0.0 # Nom de mon image
    container_name: gateway-app # Nom affiché lorsque le conteneur est prêt
    restart: unless-stopped 
    # ports:
    #   - '8340:8340' # Mappage de port pour exposer mon application
    environment:
      - SPRING_PROFILES_ACTIVE=dev # Variables d'environnement utilisées pour modifier les fonctionnalités du conteneur
      - VIRTUAL_HOST=dev.smartcustoms.app
      - LETSENCRYPT_HOST=dev.smartcustoms.app
      - VIRTUAL_PORT=8340
    networks:
      - blackseatechnology-network
    depends_on:
      - smartkey-app # Déclaration de la dépendance du service gateway-app sur smartkey-app

  pg-admin:
    image: dpage/pgadmin4:8.4
    restart: unless-stopped
    container_name: pg-admin
    # ports:
    #   - 5050:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=jean-michel.masikini@blackseatechnology.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - VIRTUAL_HOST=pgadmin.dev.smartcustoms.app
      - LETSENCRYPT_HOST=pgadmin.dev.smartcustoms.app
    networks:
      - blackseatechnology-network  
    volumes:
      - pgadmin-data:/var/lib/pgadmin
  # Vault Services
  vault:
    container_name: smartcustoms-vault
    image: hashicorp/vault:1.15.6
    restart: unless-stopped 
    cap_add:
      - IPC_LOCK
    # ports:
    #   - 8200:8200
    networks:
      - blackseatechnology-network
    environment:
      - VIRTUAL_HOST=vault.dev.smartcustoms.app
      - LETSENCRYPT_HOST=vault.dev.smartcustoms.app
      - VIRTUAL_PORT=8200
        
#Nginx proxy configuration
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: unless-stopped 
    ports:
    - "80:80"
    - "443:443"
    networks:
      - blackseatechnology-network
    environment:
      DHPARAM_GENERATION: "false"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./etc/nginx/certs:/etc/nginx/certs
      - ./etc/nginx/vhost.d:/etc/nginx/vhost.d
      - nginx_proxy_html:/usr/share/nginx/html
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-letsencrypt
    restart: unless-stopped 
    networks:
      - blackseatechnology-network
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - ./etc/nginx/certs:/etc/nginx/certs
    - ./etc/nginx/vhost.d:/etc/nginx/vhost.d
    - nginx_proxy_html:/usr/share/nginx/html
    environment:
      DEFAULT_EMAIL: jean-michel.masikini@blackseatechnology.com
      NGINX_PROXY_CONTAINER: nginx-proxy

#Declaration of my Network
networks: # Définition des réseaux
  blackseatechnology-network: # Nom du réseau definic
    name: blackseatechnology-network # Nom du réseau spécifié
    driver: bridge # Utilisation du driver bridge
    # ipam: # Gestion des adresses IP
    #   config: # Configuration des paramètres IPAM
    #     - subnet: 172.18.0.0/16 # Sous-réseau IP pour le réseau
    #       gateway: 172.18.0.1 # Passerelle du sous-réseau IP
volumes:
  nginx_proxy_html:
  serialdb-data:
  referencedb-data:
  manifestdb-data:
  consolidationdb-data:
  smartkeydb-data:

